{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/ui/Button/Button.tsx"],"sourcesContent":["'use client'\r\n\r\ninterface ButtonProps {\r\n    children: React.ReactNode,\r\n    type?: 'submit' | 'reset' | 'button',\r\n    classname?: string,\r\n    onClick?: (e: Event) => void,\r\n}\r\n\r\nexport const Button = ({children, type, classname, onClick}: ButtonProps) => {\r\n    return (\r\n        <button className={classname} type={type} onClick={(e) => onClick}>\r\n            {children}\r\n        </button>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;AASO,MAAM,SAAS,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAc;IACpE,qBACI,8OAAC;QAAO,WAAW;QAAW,MAAM;QAAM,SAAS,CAAC,IAAM;kBACrD;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/ui/FormInput/FormInput.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { forwardRef, Ref } from \"react\"\r\n\r\nexport interface FormInputProps {\r\n    type: string,\r\n    placeholder: string,\r\n    label: string,\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n    value?: string,\r\n    errorMessage?: string,\r\n    ref?: Ref<HTMLInputElement>\r\n}\r\n\r\nexport const FormInput = ({ label, errorMessage, type, placeholder, onChange, value, ref }: FormInputProps) => {\r\n    return (\r\n        <label className=\"flex flex-col gap-[2px] font-normal\">\r\n            <span className=\"font-light text-gray-400 text-sm pl-2\">\r\n                {label}\r\n            </span>\r\n            <input className=\"text-black-400 p-0.5 w-70 h-10 border-1 border-blue-300 rounded pl-2\" type={type} placeholder={placeholder} value={value} onChange={onChange} ref={ref}/>\r\n            <span>{errorMessage}</span>\r\n        </label>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;AAcO,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAkB;IACtG,qBACI,8OAAC;QAAM,WAAU;;0BACb,8OAAC;gBAAK,WAAU;0BACX;;;;;;0BAEL,8OAAC;gBAAM,WAAU;gBAAuE,MAAM;gBAAM,aAAa;gBAAa,OAAO;gBAAO,UAAU;gBAAU,KAAK;;;;;;0BACrK,8OAAC;0BAAM;;;;;;;;;;;;AAGnB","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/api/api.ts"],"sourcesContent":["import CONFIG from '@/config.json'\r\n\r\nexport type Args = {\r\n    [key: string]: string\r\n}\r\n\r\nexport async function api(cmd: string, args: any): Promise<void> {\r\n    // console.log(cmd, args)\r\n    try {\r\n      return await fetch(`http://${CONFIG.server_config.host}:${CONFIG.server_config.port}/api/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            'cmd': cmd,\r\n            'args': args,\r\n        })\r\n    }).then(() => undefined)\r\n    } catch (error) {\r\n        console.log(error)\r\n        throw new Error(`${error}`)\r\n    } \r\n}"],"names":[],"mappings":";;;AAAA;;AAMO,eAAe,IAAI,GAAW,EAAE,IAAS;IAC5C,yBAAyB;IACzB,IAAI;QACF,OAAO,MAAM,MAAM,CAAC,OAAO,EAAE,qFAAA,CAAA,UAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,qFAAA,CAAA,UAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1F,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBACjB,OAAO;gBACP,QAAQ;YACZ;QACJ,GAAG,IAAI,CAAC,IAAM;IACd,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ,MAAM,IAAI,MAAM,GAAG,OAAO;IAC9B;AACJ","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/AuthForm/AuthForm.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { z } from \"zod\"\r\nimport { Button } from \"../ui/Button/Button\"\r\nimport { FormInput } from \"../ui/FormInput/FormInput\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { api } from \"@/api/api\"\r\nimport Link from \"next/link\"\r\nimport { FormEvent, useState } from \"react\"\r\n\r\nconst authFormSchema = z.object({\r\n        email: z.string().nonempty(\"E-mail обязателен\"),\r\n        password: z.string().nonempty(\"Пароль обязателен\"),\r\n    })\r\n\r\ntype AuthFormType = z.infer<typeof authFormSchema>\r\n\r\nfunction AuthForm() {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [data, setData] = useState({})\r\n\r\n    const {register, handleSubmit, formState: { errors }} = useForm<AuthFormType>({\r\n        resolver: zodResolver(authFormSchema)\r\n    })\r\n    const onSubmit = (data: AuthFormType) => {\r\n        \r\n\r\n        let test: {login: string, password: string} = {\r\n            'login': `${data.email}`,\r\n            'password': `${data.password}`\r\n        };\r\n\r\n        // console.log(test)\r\n\r\n        api('auth', test)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} name=\"authForm\" className=\"flex flex-col gap-[20px] items-center justify-center border-1 border-sky-300 pt-15 pb-15 pl-10 pr-10 rounded-[20px] shadow-md max-w-fit\">\r\n                <h2 className=\"font-medium text-lg m-0\">Авторизация</h2>\r\n                <div className=\"flex flex-col gap-[12px]\">\r\n                    <FormInput placeholder=\"E-mail\" type=\"text\" label=\"E-mail\" {...register('email')}/>\r\n                    <FormInput placeholder=\"Пароль\" type=\"password\" label=\"Пароль\" {...register('password')}/>\r\n                </div>\r\n                <Button classname={\"font-medium bg-blue-500 w-40 h-10 rounded flex justify-center items-center text-white cursor-pointer hover:bg-blue-700 hover:shadow-lg transition duration-300 ease-in-out\"} type=\"submit\">\r\n                    Войти\r\n                </Button>\r\n                <Link href={'/register'}>\r\n                    <Button classname=\"cursor-pointer\">\r\n                        Регистрация\r\n                    </Button>\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWA,MAAM,iBAAiB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAClC;AAIJ,SAAS;IAEL,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAElC,MAAM,EAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,EAAC,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAgB;QAC1E,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;IAC1B;IACA,MAAM,WAAW,CAAC;QAGd,IAAI,OAA0C;YAC1C,SAAS,GAAG,KAAK,KAAK,EAAE;YACxB,YAAY,GAAG,KAAK,QAAQ,EAAE;QAClC;QAEA,oBAAoB;QAEpB,CAAA,GAAA,iHAAA,CAAA,MAAG,AAAD,EAAE,QAAQ;IAEhB;IAEA,qBACI;kBACI,cAAA,8OAAC;YAAK,UAAU,aAAa;YAAW,MAAK;YAAW,WAAU;;8BAC9D,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,kJAAA,CAAA,YAAS;4BAAC,aAAY;4BAAS,MAAK;4BAAO,OAAM;4BAAU,GAAG,SAAS,QAAQ;;;;;;sCAChF,8OAAC,kJAAA,CAAA,YAAS;4BAAC,aAAY;4BAAS,MAAK;4BAAW,OAAM;4BAAU,GAAG,SAAS,WAAW;;;;;;;;;;;;8BAE3F,8OAAC,4IAAA,CAAA,SAAM;oBAAC,WAAW;oBAA8K,MAAK;8BAAS;;;;;;8BAG/M,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAM;8BACR,cAAA,8OAAC,4IAAA,CAAA,SAAM;wBAAC,WAAU;kCAAiB;;;;;;;;;;;;;;;;;;AAOvD;uCAEe","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/app/auth/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport AuthForm from \"@/components/AuthForm/AuthForm\"\r\n\r\nfunction Page () {\r\n    return (\r\n        <>\r\n            <AuthForm/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,SAAS;IACL,qBACI;kBACI,cAAA,8OAAC,0IAAA,CAAA,UAAQ;;;;;;AAGrB;uCAEe","debugId":null}}]
}