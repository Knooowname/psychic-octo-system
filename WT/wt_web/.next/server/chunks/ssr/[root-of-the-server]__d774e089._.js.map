{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/ui/Button/Button.tsx"],"sourcesContent":["\r\ninterface ButtonProps {\r\n    children: React.ReactNode,\r\n    type?: 'submit' | 'reset' | 'button',\r\n    classname?: string,\r\n}\r\n\r\nexport const Button = ({children, type, classname}: ButtonProps) => {\r\n    return (\r\n        <button className={classname} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}"],"names":[],"mappings":";;;;;AAOO,MAAM,SAAS,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAc;IAC3D,qBACI,8OAAC;QAAO,WAAW;QAAW,MAAM;kBAC/B;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/ui/FormInput/FormInput.tsx"],"sourcesContent":["'use client'\r\n\r\nexport interface FormInput {\r\n    type: string,\r\n    placeholder: string,\r\n    label: string,\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n    value?: string,\r\n    errorMessage?: string,\r\n    ref?: any\r\n}\r\n\r\nexport const FormInput = ({type, placeholder, label, onChange, value, errorMessage, ref}: FormInput) => {\r\n    return (\r\n        <label className=\"flex flex-col gap-[2px] font-normal\">\r\n            <span className=\"font-light text-gray-400 text-sm\">\r\n                {label}\r\n            </span>\r\n            <input className=\"text-black-400 p-0.5 w-70 h-10 border-1 border-blue-300 rounded pl-2\" ref={ref} type={type} placeholder={placeholder} value={value} onChange={onChange}/>\r\n            {errorMessage}\r\n        </label>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;AAYO,MAAM,YAAY,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,EAAY;IAC/F,qBACI,8OAAC;QAAM,WAAU;;0BACb,8OAAC;gBAAK,WAAU;0BACX;;;;;;0BAEL,8OAAC;gBAAM,WAAU;gBAAuE,KAAK;gBAAK,MAAM;gBAAM,aAAa;gBAAa,OAAO;gBAAO,UAAU;;;;;;YAC/J;;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/components/AuthForm/AuthForm.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { z } from \"zod\"\r\nimport { Button } from \"../ui/Button/Button\"\r\nimport { FormInput } from \"../ui/FormInput/FormInput\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { user } from \"@/api/user\"\r\nimport Link from \"next/link\"\r\nimport { FormEvent, useState } from \"react\"\r\nimport { api } from \"@/pages/api/api\"\r\nimport CONFIG from '@/pages/api/config'\r\nimport handler from \"@/pages/api/config\"\r\nimport { useApi } from \"@/hooks/useApi\"\r\n\r\nconst authFormSchema = z.object({\r\n        email: z.string().email(),\r\n        password: z.string(),\r\n    })\r\n\r\ntype AuthFormType = z.infer<typeof authFormSchema>\r\n\r\nexport const AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [errorMessageEmail, setErrorMessageEmail] = useState<string>('')\r\n    \r\n    // const {register, handleSubmit, formState: { errors }} = useForm<AuthFormType>({\r\n    //     resolver: zodResolver(authFormSchema)\r\n    // })\r\n\r\n    const handleClickAuth = (e: FormEvent<HTMLFormElement>) => {\r\n        if(email.length === 0 || email === null || email === undefined) {\r\n            setErrorMessageEmail('Введен некорректный логин')\r\n        }\r\n\r\n        e.preventDefault()\r\n        useApi('auth', {email, password})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={(e) => handleClickAuth(e)} name=\"authForm\" className=\"flex flex-col gap-[16px] items-center justify-center border-1 border-sky-300 pt-12 pb-12 pl-10 pr-10 rounded-[20px] shadow-md\">\r\n                <h2 className=\"font-medium text-lg m-0\">Авторизация</h2>\r\n                <FormInput placeholder=\"E-mail\" type=\"text\" label=\"E-mail\" value={email} onChange={(e) => setEmail(e.target.value)} errorMessage={errorMessageEmail}/>\r\n                <FormInput placeholder=\"Пароль\" type=\"password\" label=\"Пароль\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                <Button classname={\"font-medium bg-blue-500 pl-7 pr-7 pt-2 pb-2 rounded flex justify-center items-center text-white cursor-pointer\"} type=\"submit\">\r\n                    Отправить\r\n                </Button>\r\n                <Link href={'/register'}>\r\n                    <Button classname=\"cursor-pointer\">\r\n                        Регистрация\r\n                    </Button>\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AAIA;AACA;;;;;;AATA;;;;;;;;AAeA,MAAM,iBAAiB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM;AACtB;AAIG,MAAM,WAAW;IAEpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEnE,kFAAkF;IAClF,4CAA4C;IAC5C,KAAK;IAEL,MAAM,kBAAkB,CAAC;QACrB,IAAG,MAAM,MAAM,KAAK,KAAK,UAAU,QAAQ,UAAU,WAAW;YAC5D,qBAAqB;QACzB;QAEA,EAAE,cAAc;QAChB,OAAO,QAAQ;YAAC;YAAO;QAAQ;IACnC;IAEA,qBACI;kBACI,cAAA,8OAAC;YAAK,UAAU,CAAC,IAAM,gBAAgB;YAAI,MAAK;YAAW,WAAU;;8BACjE,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC,kJAAA,CAAA,YAAS;oBAAC,aAAY;oBAAS,MAAK;oBAAO,OAAM;oBAAS,OAAO;oBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBAAG,cAAc;;;;;;8BAClI,8OAAC,kJAAA,CAAA,YAAS;oBAAC,aAAY;oBAAS,MAAK;oBAAW,OAAM;oBAAS,OAAO;oBAAU,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8BAC3H,8OAAC,4IAAA,CAAA,SAAM;oBAAC,WAAW;oBAAkH,MAAK;8BAAS;;;;;;8BAGnJ,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAM;8BACR,cAAA,8OAAC,4IAAA,CAAA,SAAM;wBAAC,WAAU;kCAAiB;;;;;;;;;;;;;;;;;;AAOvD","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///C:/Work/WT/wt_web/src/app/auth/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { AuthForm } from \"@/components/AuthForm/AuthForm\"\r\n\r\nexport default function Page () {\r\n    return (\r\n        <>\r\n            <AuthForm/>\r\n        </>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACpB,qBACI;kBACI,cAAA,8OAAC,0IAAA,CAAA,WAAQ;;;;;;AAGrB","debugId":null}}]
}